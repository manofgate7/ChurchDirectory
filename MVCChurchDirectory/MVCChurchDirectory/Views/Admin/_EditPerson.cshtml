@model MVCChurchDirectory.ViewModels.EditPersonViewModel

<div class="clearfix">
    @using (Html.BeginForm("EditPerson", "Admin"))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal left col-lg-8">
            <h4>EditPersonViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(model => model.personID)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CityStateZip, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CityStateZip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CityStateZip, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BestWayToContact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BestWayToContact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BestWayToContact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HaveKids, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.HaveKids, new SelectList(Model.YNOptions, "Key", "Value"), new { id = "ddlHKids", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.HaveKids, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MatStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.MatStatus,
                                            new SelectList(Model.MartialStatuses, "ID", "Name"), "-- Select Status--", new { id = "ddlMStatus", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MatStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.CategoryID,
                                            new SelectList(Model.Categories, "CatID", "Name"), "-- Select Job--", new { id = "ddlJobs", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="fieldMarried">
                @Html.LabelFor(model => model.MarriedTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(x => x.MarriedTo,
                                            new SelectList(Model.people, "ID", "Name"), "-- Select Person--", new { id = "ddlPerson", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.MarriedTo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>




    }

    <div class="right col-lg-4" id="HavingKids">
        <button type="button" onclick="AddNewKid(@Model.personID)" class="btn btn-info"> Add New Kid</button>
        <div id="NewKidModal"></div>
        <h3>Kid(s):</h3>
        <table class="table">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>last Name</th>
                    <th>Age</th>
                </tr>
            </thead>
            @foreach (var kid in Model.Children)
            {
                <tr onclick="EditKid(@kid.ChildID, @Model.personID)">
                    <td> @kid.FirstName</td>
                    <td> @kid.LastName</td>
                    <td> @kid.Age</td>
                </tr>
            }
        </table>

        <div id="EditViewKid"></div>
    </div>
</div>
<div>
    @Html.ActionLink("Close", "Index")
</div>
